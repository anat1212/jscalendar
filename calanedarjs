function createCalendar(elem, year, month) {
  myelem = document.getElementById(elem)
  table = document.createElement('table')
  tr = document.createElement('tr')
  th = document.createElement('th')
  td = document.createElement('td')
  weekday = ["SU","MO","TU","WE","TH","FR","SA"];
  
  for (let i of weekday) {
    th = document.createElement('th')
    th.innerText = i
    tr.appendChild(th)
  }
  table.appendChild(tr)
  
  for (let i=1; i<7; i++) {
    for (let j=0; j<=6; j++) {
      table.insertRow()
    	table.rows[i].insertCell(j)
    }
  }
  
  tr2 = document.createElement('tr')
  d = new Date(year, month-1, 0);
	g = new Date(year, month, 0);
  
	let rowCounter = 1
	for (let i=1; i<=g.getDate(); i++) {
  	m = new Date(year, month-1,i);
    let weekdayNumber = m.getDay()
  	let dayOfMonth = m.getDate()
    
 		if (weekdayNumber == 0) {
      rowCounter += 1
    }
    table.rows[rowCounter].cells[weekdayNumber].innerHTML = dayOfMonth
  }

  myelem.append(table)
}

createCalendar('calendar', 2012, 9);

------------------------------------------------------------------------

//Colored Clock app
body = document.querySelector('body')
div = document.createElement('div')

setInterval(myTimer, 1000);

function myTimer() {
  let date = new Date();
  hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours()
	minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()
	seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds()
	div.innerHTML = `<span class="one">${hours}:</span><span class="two">${minutes}:</span><span class="three">${seconds}</span>`
}

body.insertBefore(div, body.querySelector('input'))


-------------------------------------------------------------------------

// Add your code here
function showNotification(options) {
  body = document.querySelector('body')
	div = document.createElement('div')
  div.style.marginTop = options.top + 'px'
  div.style.marginRight = options.right + 'px'
  div.innerHTML = options.html
  div.className = "notification"
  div.classList.add(options.className)
  body.appendChild(div)
  setTimeout(() => div.style.display = 'none', 1500)
}

showNotification({ 
  top: 10, 
  right: 10,
  html: "Hello!",
  className: "welcome",
});
-------------------------------------------------------------------------

 function positionAt(anchor, position, elem) {
      div = document.createElement('div')
      div.innerHTML = elem
      div.style.position = "fixed"
      div.style.border = 'solid'
      div.style.padding = '2px'
      body = document.querySelector('body')
      let coords = anchor.getBoundingClientRect(); 
      console.log(coords)
      body.append(div)
      if (position == "top") {
        div.style.left =  `${coords.left}px`
        div.style.top = `${coords.top - div.offsetHeight}px`
      } else if (position == "right") {
        div.style.left =  `${coords.right}px`
        div.style.top = `${coords.top}px`
      } else if (position == "bottom") {
        div.style.left =  `${coords.left}px`
        div.style.top = `${coords.bottom}px`
      }
      
    }

    /*
     * Shows a note with the given html at the given position
     * relative to the anchor element.
     */
    function showNote(anchor, position, html) {
      positionAt(anchor, position, html)
    }

    // test it
    blockquote = document.querySelector('blockquote');

    showNote(blockquote, "top", "note above");
    showNote(blockquote, "right", "note at the right");
    showNote(blockquote, "bottom", "note below");
    
    -----------------------------------------------------------------------------

<!DOCTYPE HTML>
<html>

<head>
  <meta charset="utf-8">
  <style>
    #field {
      width: 200px;
      height: 150px;
      border: 10px solid black;
      background-color: #00FF00;
      overflow: hidden;
    }
  </style>
</head>

<body style="height:2000px">

  Click on a field to move the ball there.
  <br> The ball should never leave the field.


  <div id="field">
    <img src="https://en.js.cx/clipart/ball.svg" id="ball"> . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
  </div>

 <script>
  field = document.getElementById('field')
  ball = document.getElementById('ball')

  field.onclick = function(event) {
  ball.style.position = 'absolute'
  ballCoords = ball.getBoundingClientRect()
  fieldCoords = field.getBoundingClientRect()
  myX = ballCoords.width/2
  myY = ballCoords.height/2
  if (event.clientX > fieldCoords.x+myX && event.clientX < fieldCoords.right-myX && event.clientY > fieldCoords.y+myY && event.clientY < fieldCoords.bottom-myY) {
    ball.style.left = `${event.clientX-ballCoords.width/2}px`
    ball.style.top = `${event.clientY-ballCoords.height/2}px` 
  }  
}

 </script>
</body>
</html>

---------------------------------------------------------------------------------------------------------

field = document.getElementById('field')
ball = document.getElementById('ball')

field.onclick = function(event) {
  ball.style.position = 'absolute'
  ballCoords = ball.getBoundingClientRect()
  fieldCoords = field.getBoundingClientRect()
  console.log(ball.clientHeight)
  frame = field.clientLeft
  myX = ballCoords.width/2 + frame
  myY = ballCoords.height/2 + frame
  if (event.clientX > fieldCoords.x+myX && event.clientX < fieldCoords.right-myX && event.clientY > fieldCoords.y+myY && event.clientY < fieldCoords.bottom-myY) {
    ball.style.left = `${event.clientX-ballCoords.width/2}px`
    ball.style.top = `${event.clientY-ballCoords.height/2}px` 
  }  
}
--------------------------------------------------------------------------

lst = document.getElementById("lst")
up = document.getElementById('up')
down = document.getElementById('down')

function handler1() {
  this.style.display = "none"
  down.style.display = "initial"
  lst.style.display = "list-item"
}

function handler2() {
  this.style.display = "none"
  up.style.display = "initial"
  lst.style.display = "none"
}

up.addEventListener("click", handler1)
down.addEventListener("click", handler2)

--------------------------------------------------------------------

table = document.querySelector("table")
table.rows[1].cells[1].innerHTML
table.addEventListener("click", function(event) {
  if (event.target.dataset.type == "number") {
    sortedRows = Array.from(table.rows).slice(1).sort(function(rowA, rowB) {return Number(rowA.cells[0].innerHTML) - Number(rowB.cells[0].innerHTML)})
		table.tBodies[0].append(...sortedRows);
  } else if (event.target.dataset.type == "string") {
    sortedRows = Array.from(table.rows).slice(1).sort(function(rowA, rowB) {return rowA.cells[1].innerHTML > rowB.cells[1].innerHTML})
		table.tBodies[0].append(...sortedRows);
  }
})
----------------------------------------------------------------------------------------------

largeImg = document.getElementById("largeImg")
thumbs = document.getElementById("thumbs")

thumbs.addEventListener("click", function(event) {
  event.preventDefault();
  let target = event.target.closest('a');
  
  if (target && thumbs.contains(target)) {
    largeImg.src = target.getAttribute('href')
  } 
})

---------------------------------------------------
ul = document.getElementById('ul')
lis = document.getElementsByTagName("li")

ul.onmousedown = function() {
      return false;};


ul.addEventListener("click", function(event) {
  if (event.target.tagName == "LI") {
    if (event.ctrlKey || event.metaKey) {
    event.target.classList.toggle("selected");
  	} else {
      for (let li of lis) {
      li.classList.remove("selected")
    }
    event.target.classList.add("selected");
    }
    
  }  
})
-----------------------------------------------------------------------------------




coords = slider.getBoundingClientRect()
// coords.x coords.y coords.right
currentDroppable = null;

thumb = document.querySelector('.thumb')

thumb.onmousedown = function(event) {
  let shiftX = event.clientX - thumb.getBoundingClientRect().x;
  let shiftY = thumb.getBoundingClientRect().y;
  
  thumb.style.position = 'absolute';
  thumb.style.zIndex = 1000;
  document.body.append(thumb);
  
  moveAt(event.pageX, event.pageY);

  function moveAt(pageX, pageY) {
    if (pageX >= coords.right) {
      thumb.style.left = coords.right - thumb.offsetWidth + 'px'
      thumb.style.top = shiftY + 'px';
    } else if (pageX <= coords.x) {
      thumb.style.left = coords.x + 'px'
      thumb.style.top = shiftY + 'px';
    } else {
      thumb.style.left = pageX - shiftX + 'px';
    	thumb.style.top = shiftY + 'px';
    }
    
  }
  
  function onMouseMove(event) {
    moveAt(event.pageX, event.pageY);
    thumb.hidden = true;
    let elemBelow = document.elementFromPoint(event.clientX, event.clientY);
    thumb.hidden = false;

    if (elemBelow) {
      let droppableBelow = elemBelow.closest('.slider');
      if (currentDroppable != droppableBelow) {
        currentDroppable = droppableBelow;
        }
      }
	}
  document.addEventListener('mousemove', onMouseMove);
  
  document.onmouseup = function() {
    document.removeEventListener('mousemove', onMouseMove);
    thumb.onmouseup = null
  }
}

thumb.ondragstart = function() {
  return false;
  
  
  
};
---------------------------------------------------------------------------------------------------------------------------------

coords = slider.getBoundingClientRect()
// coords.x coords.y coords.right
currentDroppable = null;

thumb = document.querySelector('.thumb')

thumb.onmousedown = function(event) {
  let shiftX = event.clientX - thumb.getBoundingClientRect().x;
  let shiftY = thumb.getBoundingClientRect().y;
  
  thumb.style.position = 'absolute';
  thumb.style.zIndex = 1000;
  document.body.append(thumb);
  
  moveAt(event.pageX, event.pageY);

  function moveAt(pageX, pageY) {
    if (pageX >= coords.right) {
      thumb.style.left = coords.right - thumb.offsetWidth + 'px'
      thumb.style.top = shiftY + 'px';
    } else if (pageX <= coords.x) {
      thumb.style.left = coords.x + 'px'
      thumb.style.top = shiftY + 'px';
    } else {
      thumb.style.left = pageX - shiftX + 'px';
    	thumb.style.top = shiftY + 'px';
    }
    
  }
  
  function onMouseMove(event) {
    moveAt(event.pageX, event.pageY);
    thumb.hidden = true;
    let elemBelow = document.elementFromPoint(event.clientX, event.clientY);
    thumb.hidden = false;

    if (elemBelow) {
      let droppableBelow = elemBelow.closest('.slider');
      if (currentDroppable != droppableBelow) {
        currentDroppable = droppableBelow;
        }
      }
	}
  document.addEventListener('mousemove', onMouseMove);
  
  document.onmouseup = function() {
    document.removeEventListener('mousemove', onMouseMove);
    thumb.onmouseup = null
  }
}

thumb.ondragstart = function() {
  return false;
};
------------------------------------------

arrowTop.style.display = 'none'

window.addEventListener('scroll', function(event) {
  coords = document.documentElement.getBoundingClientRect();
  if (Math.abs(coords.y) >= coords.height) {
    arrowTop.style.display = ''
  } else {
    arrowTop.style.display = 'none'
  }
})

arrowTop.addEventListener('click', function(event) {
  window.scrollTo({ top: 0, behavior: 'smooth' })
})
------------------------------------------------------

view.tabIndex = 0

textarea = document.createElement("TEXTAREA");
textarea.classList.add('edit');
textarea.classList.add('view');
document.body.appendChild(textarea);
textarea.style.display = 'none'

view.onfocus = function(event) {
  this.classList.add('edit');
  view.style.display = 'none'
  textarea.style.display = ''
  textarea.focus()
}

textarea.onkeyup = function(event) {
  view.innerHTML = textarea.value
}

textarea.onblur = function() {
  textarea.style.display = 'none'
  view.style.display = ''
  view.classList.remove('edit');
  view.classList.remove('view');
}

textarea.onkeydown = function(event) {
  if (event.key == 'Enter') {
    textarea.style.display = 'none'
  	view.style.display = ''
    view.classList.remove('edit');
    view.classList.remove('view');
  }
}
-------------------------------------------------
mouse.tabIndex = 0

mouse.onclick = function(event) {
  this.focus()
  console.log(this)
  this.style.position = 'fixed';
  this.style.zIndex = 1000;
  
  this.onkeydown = function(event) {
    xCoord = this.getBoundingClientRect().x;
    yCoord = this.getBoundingClientRect().y;
    if (event.key == 'ArrowLeft') {
      this.style.left = xCoord - this.offsetWidth + 'px'
    } else if (event.key == 'ArrowRight') {
      this.style.left = xCoord + this.offsetWidth + 'px'
    } else if (event.key == 'ArrowDown') {
      this.style.top = yCoord + this.offsetWidth + 'px'
      console.log('down')
    } else if (event.key == 'ArrowUp') {
      this.style.top = yCoord - this.offsetWidth + 'px'
      console.log('up')
    }
  }
}
--------------------------------------------------------------------------------------------

table = document.getElementById('bagua-table');
textarea = document.createElement("TEXTAREA");
textarea.classList.add('textarea');
textarea.style.display = 'none'
textarea.style.position = 'absolute';
textarea.style.zIndex = 1000;
textarea.tabIndex = 0
document.body.appendChild(textarea);
selectedTd = false;


buttonOK = document.createElement("BUTTON");
buttonOK.type = "button"
buttonOK.innerText = "OK"
buttonOK.style.display = 'none'
buttonOK.style.position = 'absolute';
buttonOK.style.zIndex = 1001;
document.body.appendChild(buttonOK);

buttonCANCEL = document.createElement("BUTTON");
buttonCANCEL.type = "button"
buttonCANCEL.innerText = "CANCEL"
buttonCANCEL.style.display = 'none'
buttonCANCEL.style.position = 'absolute';
buttonCANCEL.style.zIndex = 1002;
document.body.appendChild(buttonCANCEL);

table.onclick = function(event) {
  if (selectedTd) {
    textarea.focus()
    return
  }
  let target = event.target;
  if (target.tagName == 'TD') {
    selectedTd = target
    target.tabIndex = 0
    target.focus()
    let coords = target.getBoundingClientRect()
    textarea.style.left = coords.x + 'px'
    textarea.style.top = coords.y + 'px'
    textarea.style.height = coords.height-24 + 'px'
    textarea.value = target.innerHTML
    
    textarea.style.display = ''
    textarea.focus() 
    buttonOK.style.top = coords.height + coords.y + 4 + 'px'
    buttonOK.style.left = coords.x + 35 + 'px'
    buttonOK.style.display = ''
    
    buttonCANCEL.style.top = coords.height + coords.y + 4 + 'px'
    buttonCANCEL.style.left = coords.x + 70 + 'px'
    buttonCANCEL.style.display = ''
    buttonCANCEL.style.height = buttonOK.style.height
    
    buttonOK.onclick = function() {
      target.innerHTML = textarea.value
      textarea.style.display = 'none'
      selectedTd = false;
      buttonOK.style.display = 'none'
      buttonCANCEL.style.display = 'none'
      target.focus()
    }
    
    buttonCANCEL.onclick = function() {
      textarea.style.display = 'none'
      selectedTd = false;
      buttonOK.style.display = 'none'
      buttonCANCEL.style.display = 'none'
      target.focus()
    }
  }
}

-----------------------------------------------------------------------------------
